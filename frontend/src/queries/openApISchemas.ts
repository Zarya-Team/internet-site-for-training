/**
 * Generated by @openapi-codegen
 *
 * @version 0.0.1
 */
export type BodyAuthJwtLoginAuthJwtLoginPost = {
  grantType?: string | null;
  username: string;
  password: string;
  /**
   * @default
   */
  scope?: string;
  clientId?: string | null;
  clientSecret?: string | null;
};

export type BodyResetForgotPasswordAuthForgotPasswordPost = {
  /**
   * @format email
   */
  email: string;
};

export type BodyResetResetPasswordAuthResetPasswordPost = {
  token: string;
  password: string;
};

export type BodyVerifyRequestTokenAuthRequestVerifyTokenPost = {
  /**
   * @format email
   */
  email: string;
};

export type BodyVerifyVerifyAuthVerifyPost = {
  token: string;
};

export type CategoriesSchema = {
  id: number;
  name: string;
};

export type CountriesSchema = {
  id: number;
  name: string;
  history: string;
};

export type ErrorModel = {
  detail:
    | string
    | {
        [key: string]: string;
      };
};

export type HTTPValidationError = {
  detail?: ValidationError[];
};

export type IngredientsRecipeSchema = {
  name: string;
  weight: number;
};

export type RecipeIngredientsSchema = {
  title: string;
  desc: string;
  ingredients: IngredientsRecipeSchema[];
};

export type RecipesSchema = {
  id: number;
  title: string;
  desc: string;
};

export type UserCreate = {
  /**
   * @format email
   */
  email: string;
  password: string;
  /**
   * @default true
   */
  isActive?: boolean | null;
  /**
   * @default false
   */
  isSuperuser?: boolean | null;
  /**
   * @default false
   */
  isVerified?: boolean | null;
};

export type UserRead = {
  /**
   * @format uuid
   */
  id: string;
  /**
   * @format email
   */
  email: string;
  /**
   * @default true
   */
  isActive?: boolean;
  /**
   * @default false
   */
  isSuperuser?: boolean;
  /**
   * @default false
   */
  isVerified?: boolean;
};

export type UserUpdate = {
  password?: string | null;
  email?: string | null;
  isActive?: boolean | null;
  isSuperuser?: boolean | null;
  isVerified?: boolean | null;
};

export type ValidationError = {
  loc: (string | number)[];
  msg: string;
  type: string;
};
